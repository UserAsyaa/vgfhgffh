html, body { /*По всему документу делаем следующие настройки*/
    margin: 0; /*Внешние отступы обнуляем*/
    padding: 0; /*Внутренние отступы обнуляем*/
    font-family: "Poppins", sans-serif; /*Ставим шрифт Poppins*/
}

/*Шапка---------------------------------------------------------------------------------------------------------------*/

.container { /*Для контейнера*/
    margin: 0 auto; /*Задаём автоматические отступы бо бокам, а также обнуляем отступы сверху и снизу*/
    width: 1300px; /*Задаём размер*/
}

.logo { /*В классе логотипа*/
    display: flex; /*Изображение и текст ставим по горизонтали*/
    align-items: center; /*Выравниваем их друг относительно друга по вертикали*/
}

.logo img {
    margin-right: 10px;
}

header { /*Для всей шапки сайта*/
    display: flex; /*Расставляем элементы по горизонатли*/
    align-items: center; /*Выравниваем их друг относительно друга по вертикали*/
    justify-content: space-between; /*Растягиваем элементы по всей доступной длине (длина контейнера*/
}

nav { /*Для навигационной панели*/
    margin-left: -200px; /*Делаем отрицательный отступ слева (сдвигаем сам блок влево)*/
}

nav a { /*Для каждой из ссылок в навигационной панели*/
    font-size: 17px; /*Задаём размер текста*/
    color: #656464; /*Задаём цвет*/
    text-decoration: none; /*Нижнее подчёркивание убираем*/
    font-weight: 600; /*Выбираем жирноту шрифта (инициализируется в fonts.css)*/
    margin-left: 40px; /*Задаём отступ слева*/
}

nav a:first-child { /*Первой ссылке из этой группы*/
    color: #000000; /*Задаём этот цвет*/
    letter-spacing: 1px;
}

.search_and_login { /*Для группы с кнопкой регистрации и полем поиска*/
    align-items: center; /*Делаем выравнивание элементов друг относительно друга*/
    display: flex; /*Ставим их по горизонтали*/
}

.search_and_login input { /*Для поля поиска*/
    width: 125px; /*Задаём размер*/
    border: none; /*Убираем дефолтную рамку*/
    border-bottom: 1px solid #E5E5E5; /*Делаем свою рамку, но граница будет отображаться только снизу*/
    padding: 15px 0; /*Делаем сверху и снизу внутренние отступы, чтобы отклеить рамку от текста в поле, слева и справа по нулям*/
    margin-right: 40px; /*Делаем отступ справа, чтобы отклеить поле от кнопки*/
    background-color: transparent; /*Задаём ему адаптивный цвет, который будет браться от родительского класса (в данном случае
    от класса bg_color)*/
}

.search_and_login input::placeholder { /*Редактируем подсказку внутри поля ввода, обращаяясь к соотвествующему параметру
который прописываем для поля ещё в html*/
    color: #000000; /*Задаём цвет текста*/
    letter-spacing: 1px;
}

.search_and_login a { /*Редактируем кнопку регистрации*/
    border: 1px solid #217BF4; /*Ставим рамку*/
    padding: 16px 40px; /*С помощью внутренних отступов делаем рамку шире, тем самым и саму кнопку*/
    background-color: #217BF4; /*Цвет заднего фона в кнопке*/
    color: #ffffff; /*Цвет текста*/
    text-decoration: none; /*Нижнее подчёркивание убираем*/
    border-radius: 15px; /*Скругляем углы рамки*/
    font-weight: 600; /*Выбираем жирноту шрифта (инициализируется в fonts.css)*/
    box-shadow: 1px 1px 15px -1px rgba(33, 123, 244, 0.37); /*Параметр, задающий тень для блока.
    Первое значение - позиция по оси x (горизонтально), второе по оси y (вертикально), третье - интенсивность тени
    (чем больше значение, тем размазанней и растянутой будет тень, как с плёнкой - чем больше растягиваете её, тем больше она будет,
    но её плотность сильно уменьшится, также и тут). Четвёртое значение - собственно размер тени (если не указывать это
    значение, то она будет того же размера, что и сам блок), ну и цвет соответственно (не пугайтесь этой команды,
    она сама автоматически вставится, если вы будете для цвета задавать прозрачность в палитре). rgba - функция,
    задающая цвет по значениям red/green/blue/alpha - красный/зелёный/синий/прозрачность*/
}

hr { /*Редактируем горизонтальную линию (учтите, не во всех браузерах сработает)*/
    margin: 0; /*Обнуляем все внешние отступы*/
    padding: 0; /*Обнуляем все внутренние отступы*/
    color: rgba(33, 123, 244, 0.15); /*И задаём цвет*/
}

/*Welcome-блок--------------------------------------------------------------------------------------------------------*/

.welcome_block { /*Редактируем приветственный блок*/
    display: flex; /*Расставляем элементы по горизонтали*/
    align-items: center; /*Выравниваем их друг относительно друга по вертикали*/
    padding-bottom: 80px; /*Делаем внутренний отступ снизу, чтобы градиентный фон был ниже (через margin почему то не работает)*/
    justify-content: space-between; /*Растягиваем элементы по всей длине контейнера*/
}

.main_text a { /*Меняем в текстовом блоке самую высокую кнопку*/
    letter-spacing: 1px;
    border: 1px solid #E5EEFC;  /*Ставим рамку*/
    padding: 10px 30px; /*С помощью внутренних отступов делаем рамку шире, тем самым и саму кнопку*/
    background-color: #E5EEFC; /*Цвет заднего фона в кнопке*/
    text-decoration: none; /*Нижнее подчёркивание убираем*/
    border-radius: 10px; /*Скругляем углы рамки*/
    color: #217BF4; /*Цвет текста*/
    font-weight: 600;
}

.main_text h1 { /*Меняем в текстовом блоке заголовок*/
    font-size: 60px; /*Задаём размер текста*/
    color: #0A093D; /*Цвет текста*/
    margin-top: 35px; /*Опустим его чуть чуть вниз посредством увеличения отступа сверху*/
}

.wb_text_block { /*Отредактируем текстовый блок*/
    margin-top: 50px; /*Опустим его чуть ниже*/
}

.main_text p { /*Меняем в текстовом блоке абзац*/
    letter-spacing: 1px;
    margin-top: -20px; /*Поднимем его выше*/
    font-size: 18px; /*Задаём размер текста*/
    color: #656464; /*Цвет текста*/
    line-height: 30px; /*Изменим междустрочный интервал*/
}

.wb_button_block { /*Отредактируем блок с кнопками*/
    margin-top: 65px; /*Опустим его чуть ниже*/
}

.wb_button_block a { /*Для каждой из кнопок ниже текста*/
    border: 1px solid rgba(94, 157, 255, 0.77); /*Ставим рамку*/
    padding: 22px 40px; /*С помощью внутренних отступов делаем рамку шире, тем самым и саму кнопку*/
    text-decoration: none; /*Нижнее подчёркивание убираем*/
    border-radius: 15px; /*Скругляем углы рамки*/
    letter-spacing: 1px;
    font-weight: 600;
}

.wb_button_block a:first-child { /*Для первой кнопки в этой группе*/
    background-color: #217BF4; /*Цвет заднего фона в кнопке*/
    box-shadow: 1px 1px 15px -1px rgba(33, 123, 244, 0.37); /*Задаём тень*/
    color: #ffffff; /*Цвет текста*/
    letter-spacing: 1px;
}

.wb_button_block a:last-child { /*Для второй кнопки в этой группе*/
    background-color: #ffffff; /*Цвет заднего фона в кнопке*/
    color: #217BF4; /*Цвет текста*/
    margin-left: 15px; /*Отступ слева*/
    letter-spacing: 1px;
}

.bg_color { /*Класс заднего фона для шапки и welcome-блока*/
    background: linear-gradient(-45deg, rgba(212, 231, 254, 0.73) 10%, #ffffff 80%); /*Меняем параметр background -
    параметр, который задаёт цвет для заднего фона (у него достаточно много вариаций применения, но обычный задаёт лишь
    цвет для фона, доступный в палитре. Внутри него мы обращаемся в функции linear-gradient - линейный градиент.
    Название говорит само за себя - по прямой условной линии распределяются цвета, плавно переходящие друг в друга,
    создавая эффект градиента. Первое значение в этой функции, это поворот этой самой линии по кругу (есть три вариации
    указания поворота - дольный, градусный и словесный). Дольный имеет вид 0.15turn, дословно повернуть линию вправо на 15%.
    Градусный имеет вид 90deg, где deg - degree(градусы). Всего в круге 360 градусов, указание значений меньше 0 или больше
    360 по факту не имеет смысла, потому что css будет их возвращать в промежуток 0 => x => 360, вычитая или прибавляя лишние цифры
    но писать можно, не запрещено. Словесный имеет вид to right (Направо), to left (Налево), to top (Наверх) и to bottom (Вниз).
    Как пишется, так и работает. Есть и двойные комбинации, по типу to top left, что означает, что линия градиента будет
    как бы по диагонали (выше самого левого). Объяснить сложно, тут рисовать надо.
    После поворотов указываем количество цветов для градиента. От порядка цветов в функции зависит сам градиент (у нас
    он почему работает только если мы наоборот сделаем цвета, потому что первым идёт белый, а у нас наоборот,
    либо документация нам врёт). Проценты задают точку остановки для цвета (сами проценты берутся он длины блока,
    для которого применяется градиент). Их смысл в том, что до определённого процента первый цвет начнёт тусклеть и
    переходить в другой (чем больше разница в процентах между двумя цветами, тем более плавный будет переход).
    Необязательно равнять эти проценты с суммарным 100%*/
}

/*Информационный блок-------------------------------------------------------------------------------------------------*/
.what_block { /*Редактируем весь инфоблок*/
    margin-top: 150px; /*Делаем отступ сверху*/
}

.what_text_block { /*Редактируем весь текстовый блок слева*/
    margin-top: 55px; /*Делаем отступ сверху*/
}

.what_text_block a { /*Редактируем первую ссылку внутри текстового блока*/
    color: #217BF4; /*Цвет текста*/
    font-size: 20px; /*Задаём размер текста*/
    text-decoration: none; /*Нижнее подчёркивание убираем*/
    font-weight: 600; /*Делаем шрифт жирнее засчёт ранее подключенных стилей жирности*/
}

.what_text_block h1 { /*Редактируем заголовок внутри текстового блока*/
    margin-top: 10px; /*Делаем отступ сверху*/
    line-height: 50px; /*Задаём междустрочный интервал*/
    color: #0A093D; /*Цвет текста*/
    font-size: 40px; /*Задаём размер текста*/
}

.what_text_block p { /*Редактируем маленький абзац внутри текстового блока*/
    line-height: 25px; /*Задаём междустрочный интервал*/
    margin-top: -5px; /*Делаем отрицательный отступ сверху (тобишь поднимаем выше)*/
    color: #656464; /*Цвет текста*/
    font-size: 18px; /*Задаём размер текста*/
    letter-spacing: 1px;
}

ul { /*Редактируем ненумированный список целиком*/
    list-style-type: none; /*Убираем дефолтные маркеры*/
    font-size: 20px; /*Задаём размер текста по всему списку*/
    color: #171648; /*Цвет текста*/
    font-weight: 600; /*Делаем шрифт жирнее засчёт ранее подключенных стилей жирности*/
    margin: 30px 0 0 0; /*Делаем отступы только сверху, остальные обнуляем, иначе будет по дефолту иметь ненужные отступы*/
    padding: 0; /*Ну и все отступы внутренние тоже обнуляем, потому что опять же они там откуда то взялись*/
}

li { /*Каждому элементу списка*/
    margin-bottom: 15px; /*Делаем отступ снизу*/
    letter-spacing: 1px;
}

li::before { /*Псевдокласс before применяется для редактирования контента, который стоит перед основной информацией (контентом).
Другими словами, мы вставляем перед элементами списка какой-то другой контент, и делается эта махинация через before. У неё есть
собрат в лице after, который наоборот вставляет какую-то информацию после основной.*/

    content: ""; /*Соответственно что нам нужно вставить спереди. Если кавычки пустые, то будет просто пустое пространство*/

    display: inline-block; /*Эта фича позволяет, скажем так, сделать монолитный обтекаемый блок, который будет собой вытеснять весь контент,
    если вдруг он будет пересекаться с ним. Другими словами, представьте себе ситуацию, у вас есть кнопка (элемент a), и вы решили
    ей сделать отступ. Отступ будет идти не от границ кнопки, а от текста внутри неё. Неудобно и иногда портит восприятие.
    Для этого можно воспользоваться следующим ходом. Из этой кнопки делается полноценный блочный элемент, и в данном случае
    рамки будут частью самой этой кнопки полноценно, и отступ будет идти уже от них. Также другие элементы, по типу текста, будут принудительно
    её обтекать, что ещё удобнее. В нашем случае это необходимость, чтобы всё отображалось корректно.*/

    width: 17px; /*Ширина встраимаемого контента*/
    height: 17px; /*Высота встраимаемого контента*/
    margin-right: 10px; /*Немного оттесним текст от иконок*/

    background-image: url("/assets/images/list_icon.png"); /*Изображение иконки будет в качестве заднего фона, а поскольку
    контента никакого нет, что на его место встанет как раз этот задний фон.*/

    background-size: cover; /*С помощью данной фичи размер картинки подстраивается под те размеры, что мы указали в width и height*/
}

.what_block {
    display: flex;
    justify-content: space-between;
}

.what_image_block { /*Редактируем блок изображений*/
    align-items: center;
    display: flex; /*Расставляем элементы по горизонтали*/
}

.what_two_images { /*Блок с двумя маленькими избражениями*/
    display: grid; /*Ставим их по вертикали (grid позволяет выравнивать элементы в столбцы и строки, но в данном случае
    это просто необходимость)*/
}

.what_image_block img { /* У изображений в блоке изображений*/
    border-radius: 15px; /*Скругляем углы*/
}

.what_two_images img:first-child { /*У первого малленького изображения*/
    margin-bottom: 15px; /*Делаем отступ снизу*/
}

.what_two_images img:last-child { /*У второго малленького изображения*/
    margin-top: 15px; /*Делаем отступ сверху, таким образом отступ между ними составит 30px*/
}

.big_image img { /*У большого изображения*/
    margin-right: 30px; /*Делаем такой же отступ слева, что и между мелкими изображениями, в итоге получатся ровные
    отступы между ними*/
}

.big_image a { /*Кнопка запуска внутри большого изображения*/
    text-decoration: none; /*Нижнее подчёркивание убираем*/

    position: relative; /*Позиционирование элемента относительно того места, которое он занимал до этого. Таким образом
    мы можем передвигать его без опаски сдвинуть остальные элементы, поскольку по дефолту он просто накладывает его поверх
    остальных элементов. Подробнее можете почитать по ссылке https://htmlacademy-ru.turbopages.org/htmlacademy.ru/s/blog/css/position*/

    left: 160px; /*Перемещаем его правее, увеличивая отступ слева*/
    bottom: 175px; /*Перемещаем выше, делая больше отступ снизу*/
    color: #2766F7; /*Цвет текста*/
    background-color: #FFFFFF; /*Цвет самой кнопки*/
    border: 1px solid #ffffff; /*Цвет рамки кнопки, которая подстроена под цвет заднего фона*/
    padding: 10px 12px; /*Делаем кнопку больше посредством увеличения внутренних отступов от самого символа до границ рамки*/
    border-radius: 50%; /*Скругляем таким образом рамку до состояния круга*/
}
/*Блок достижений (achievements)--------------------------------------------------------------------------------------*/
.h_card { /*Заголовок карточки с иконкой*/
    display: flex; /*Расставляем элементы по горизонтали*/
    align-items: center; /*Выравниваем их друг относительно друга по вертикали*/
    margin-bottom: 22px; /*Делаем отступ снизу*/
}

.h_card h4 { /*Текст заголовка*/
    letter-spacing: 1px; /*Это новый элемент для вас - отступ между буквами. Расставил по всему документу для красоты.*/
    color: #0A093D; /*Цвет текста*/
    margin: 0 0 0 10px; /*Обнуляем все отступы (они непонятно откуда взялись), кроме левого*/
    font-size: 20px; /*Задаём размер текста*/
}

.members { /*Элемент с изображением и текстом с цифрами*/
    display: flex; /*Расставляем элементы по горизонтали*/
    align-items: center; /*Выравниваем их друг относительно друга по вертикали*/
    margin-bottom: 30px; /*Делаем отступ снизу*/
}

.members img { /*Само изображение*/
    margin-left: -17px; /*Делаем отступ слева отрицательным (сдвигаем влево)*/
    margin-top: 7px; /*Делаем отступ сверху*/
}

.members a { /*Ссылка внутри текста (там, где цифры)*/
    text-decoration: none; /*Нижнее подчёркивание убираем*/
    color: #217BF4; /*Цвет текста*/
    margin-left: 10px; /*Делаем отступ слева*/
}

.members p { /*Весь текст (вместе с цифрами)*/
    font-weight: 600; /*Жирнота текста*/
    color: rgba(93, 91, 112, 0.79); /*Цвет текста с процентом прозрачности*/
    font-size: 18px; /*Задаём размер текста*/
    letter-spacing: 1px; /*Отступ между буквами*/
}

.ach_text_elem { /*Текст внутри карточки*/
    letter-spacing: 1px; /*Отступ между буквами*/
    color: #8C8C8C; /*Цвет текста*/
    margin-bottom: 45px; /*Делаем отступ снизу*/
    font-size: 18px; /*Задаём размер текста*/
}

.ach_a_elem { /*Огромная ссылка снизу карточки*/
    color: #217BF4; /*Цвет текста*/
    text-decoration: none; /*Нижнее подчёркивание убираем*/
    font-weight: 600; /*Жирнота текста*/
    font-size: 18px; /*Задаём размер текста*/
}

.ach_card1 { /*Элемент первой карточки*/
    border: 1px solid #fafafa; /*Задаём рамку*/
    padding: 40px 30px 40px 40px; /*Внутренние отступы, чтобы отступы от границ до внутренностей были больше*/
    border-radius: 15px; /*Скругляем углы*/
    box-shadow: 0 25px 90px -10px rgba(146, 165, 184, 0.26); /*Тень вокруг рамки*/
}

.achievement_cards { /*Все карточки*/
    display: flex; /*Расставляем по горизонтали*/
}

.achievements { /*Весь блок достижений*/
    display: flex; /*Расставляем элементы по горизонтали*/
    justify-content: space-between; /*Растягиваем элементы по объёму контейнера*/
    align-items: center; /*Выравниваем их друг относительно друга по вертикали*/
    margin-top: 150px; /*Отступ сверху, чтобы отлепить блок от предыдущего*/
}

.best_2021 { /*Элемент с изображением и текстом с цифрами во второй карточке*/
    display: flex; /*Расставляем элементы по горизонтали*/
    align-items: center; /*Выравниваем их друг относительно друга по вертикали*/
    margin-bottom: 32px; /*Делаем отступ снизу*/
}

.best_2021 img { /*У иконки GitHub*/
    margin-left: -10px; /*Делаем отступ слева отрицательным (сдвигаем влево)*/
    margin-top: 7px; /*Делаем отступ сверху*/
}

.best_2021 a { /*Ссылка внутри текста (там, где цифры)*/
    text-decoration: none; /*Нижнее подчёркивание убираем*/
    color: #217BF4; /*Цвет текста*/
    margin-left: 10px; /*Делаем отступ слева*/
}

.best_2021 p { /*Весь текст (вместе с цифрами)*/
    letter-spacing: 1px; /*Отступ между буквами*/
    font-weight: 600; /*Жирнота текста*/
    color: rgba(93, 91, 112, 0.79); /*Цвет текста с процентом прозрачности*/
    font-size: 18px; /*Задаём размер текста*/
}

.ach_card2 .ach_a_elem { /*Огромная ссылка снизу карточки*/
    color: #4A4A56; /*Цвет текста*/
}

.ach_card2 { /*Элемент второй карточки*/
    border: 1px solid rgba(94, 94, 94, 0.12); /*Задаём рамку*/
    padding: 40px 30px 40px 40px; /*Внутренние отступы, чтобы отступы от границ до внутренностей были больше*/
    border-radius: 15px; /*Скругляем углы*/
    margin-left: 30px; /*Делаем отступ слева*/
}

.our_achievement a { /*Ссылка вверху текстового блока достижений*/
    letter-spacing: 1px; /*Отступ между буквами*/
    color: #217BF4; /*Цвет текста*/
    text-decoration: none; /*Нижнее подчёркивание убираем*/
    font-weight: 600; /*Жирнота текста*/
    font-size: 18px; /*Задаём размер текста*/
}

.achievement_text_block { /*Текстовый блок достижений*/
    margin-top: -17px; /*Немного приподнимем его, а то кнопка с рамками портит пропорции*/
}

.achievement_text_block h1 { /*Заголовок текстового блока*/
    margin-top: 10px; /*Делаем отступ сверху*/
    color: #0A093D; /*Цвет текста*/
    font-size: 36px; /*Задаём размер текста*/
}

.achievement_text_block p { /*Абзац текстового блока*/
    letter-spacing: 1px; /*Отступ между буквами*/
    color: #656464; /*Цвет текста*/
    font-size: 16px; /*Задаём размер текста*/
    margin-bottom: 65px; /*Делаем отступ снизу*/
}

.ach_button a { /*Кнопка снизу текстового блока (Discover Me)*/
    letter-spacing: 1px; /*Отступ между буквами*/
    color: #ffffff; /*Цвет текста*/
    text-decoration: none; /*Нижнее подчёркивание убираем*/
    border: 1px solid #217BF4; /*Задаём рамку*/
    border-radius: 15px; /*Скругляем углы*/
    padding: 20px 40px; /*Внутренние отступы, чтобы отступы от границ до текста были больше*/
    font-weight: 600;  /*Жирнота текста*/
    font-size: 14px; /*Задаём размер текста*/
    background-color: #217BF4; /*Цвет кнопки*/
    box-shadow: 1px 1px 15px -1px rgba(33, 123, 244, 0.37); /*Тень кнопки*/
}

/*Блок участников (members)-------------------------------------------------------------------------------------------*/
.our_active_members { /*Опустим блок участников*/
    margin-top: 200px;
}

.active_members_text { /*Для текстового (шапки) блока делаем следующее*/
    display: block; /*Ставим элементы вертикально (на самом деле можно и без него, просто для перестраховки)*/
    text-align: center; /*Текст по центру контейнера*/
}

.active_members_text a {  /*Для ссылки сверху шапки*/
    text-decoration: none; /*Убираем подчёркивание*/
    color: #217BF4; /*Цвет текста*/
    font-weight: 600; /*Жирнота текста*/
    letter-spacing: 1px; /*Расстояние между буквами*/
}

.active_members_text h1 { /*Для заголовка текстового блока*/
    margin: 7px 0 0 0; /*Делаем отступ сверху, чтобы отдалить его от ссылки. Остальные отступы обнуляем*/
    color: #0A093D; /*Цвет текста*/
}

.active_members_text p { /*Для абзаца текстового блока*/
    margin-top: 20px; /*Отстраняем его от заголовка отступом сверху*/
    letter-spacing: 1px; /*Расстояние между буквами*/
    color: rgba(101, 100, 100, 0.8); /*Цвет текста*/
    font-size: 14px; /*Размер текста*/
    font-weight: 600; /*Жирнота текста*/
}

.active_nav_panel { /*Блок с кнопками*/
    border-radius: 15px; /*Скругляем углы*/
    background-color: rgba(76, 130, 220, 0.1); /*Цвет заднего фона панели (серой)*/
    border: 1px solid rgba(90, 131, 196, 0); /*Рамка для панели*/
    padding: 30px 0; /*Делаем внутренние отступы для верха и низа панели*/
    width: 475px; /*Делаем фиксированную ширину панели, иначе она будет длиной с контейнер*/
    text-align: center; /*Текст по центру*/
    margin: 50px auto 0; /*Выравниваем внутренности по центру, и делаем сверху в 50px*/
}

.active_nav_panel a { /*Кнопки внутри панели*/
    text-decoration: none; /*Убираем подчёркивание*/
    color: rgba(47, 44, 74, 0.63); /*Цвет текста*/
    font-weight: 600; /*Жирнота текста*/
    margin: 0 43px 0 43px; /*Делаем отступы по бокам, чтобы отстранить их друг от друга*/
    letter-spacing: 1px; /*Расстояние между буквами*/
}

.active_nav_panel a:last-child { /*Для последней ссылки*/
    border: 1px solid #217BF4; /*Делаем другую рамку*/
    background-color: #217BF4; /*Делаем цвет заднего фона кнопки*/
    padding: 21px 50px; /*Внутренние отступы у кнопки, чтобы сделать её больше*/
    color: #ffffff; /*Цвет текста*/
    border-radius: 17px; /*Скругляем углы*/
    margin: 0; /*Обнуляем внешние отступы, чтобы они не портили расстановку других кнопок*/
    box-shadow: 1px 1px 15px -1px rgba(33, 123, 244, 0.37); /*Тень для кнопки*/
}

.man_picture_size { /*Для изображений задаём высоту и ширину*/
    width: 142px;
    height: 142px;
}

.border_class img { /*Желтая рамка вокруг изображений*/
    margin-bottom: -163px; /*Поднимаем изображения с людьми выше посредством отрицательного отступа снизу*/
    position: relative; /*Позиционируем рамку так, чтобы она накладывалась на изображения с людьми (как раз в этом нам и поможет отрицательный отступ)*/
    margin-top: 30px; /*Делаем отступ сверху изображения, чтобы оно не упиралось в рамку*/
}

.members_cards { /*Класс карточек*/
    justify-content: space-between; /*Располагаем элементы по всей ширине*/
    display: flex; /*Ставим по горизонтали*/
    margin-top: 50px; /*Опускаем его чуть ниже от предыдущего блока*/
}

.card { /*Класс карточки*/
    justify-content: center; /*Расставляем все внутренности по центру*/
    text-align: center; /*Текст тоже по центру*/
    border: 2px solid rgba(239, 239, 239, 0.63); /*Задаём рамку карточке*/
    width: 299px; /*Длина карточки (фиксированного значения)*/
    height: 315px; /*Высота карточки (фиксированного значения)*/
    border-radius: 15px; /*Скругляем углы*/
}

.card h1 { /*Заголовок в карточке*/
    letter-spacing: 1px; /*Расстояние между буквами*/
    margin-top: 45px; /*Опускаем его чуть ниже от изображения*/
    font-weight: 600; /*Жирнота текста*/
    color: #2F2C4A; /*Цвет текста*/
    font-size: 25px; /*Размер текста*/
}

.card p { /*Для абзаца карточки*/
    letter-spacing: 1px; /*Расстояние между буквами*/
    font-weight: 600; /*Жирнота текста*/
    color: rgba(101, 100, 100, 0.65); /*Цвет текста*/
    font-size: 16px; /*Размер текста*/
    margin-top: -7px; /*Поднимем абзац чуть выше к заголовку*/
}

.card_shadow { /*Тень и прозрачная рамка для первой карточки*/
    box-shadow: 0 25px 90px -10px rgba(146, 165, 184, 0.26);
    border: 1px solid rgba(239, 239, 239, 0.37);
}

/*Блок со смартфоном--------------------------------------------------------------------------------------------------*/
.app_text a { /*Ссылка внутри текстового подблока (синяя)*/
    letter-spacing: 1px; /*Расстояние между буквами*/
    color: #217BF4; /*Цвет текста*/
    font-size: 17px; /*Размер текста*/
    text-decoration: none; /*Убираем подчёркивание*/
    font-weight: 600; /*Жирнота текста*/
}

.app_text h1 { /*Заголовок внутри текстового подблока*/
    margin-top: 10px; /*Отступ сверху*/
    color: #0A093D; /*Цвет текста*/
    font-size: 45px; /*Размер текста*/
}

.app_text p { /*Абзац внутри текстового подблока*/
    margin-top: -5px; /*Отступ сверху*/
    letter-spacing: 1px; /*Расстояние между буквами*/
    color: rgba(101, 100, 100, 0.83); /*Цвет текста*/
    font-size: 18px; /*Размер текста*/
}

.get_out_app_text img { /*Все изображения внутри левого блока (2 иконки на кнопках)*/
    width: 30px; /*Длина изображения*/
    height: 30px; /*Высота изображения*/
}

.app_button_block { /*Блок с кнопками*/
    margin-top: 35px; /*Сделаем отступ сверху*/
    display: flex; /*Расположим по горизонтали*/
}

.app_button_text { /*Блок с текстом в кнопке*/
    margin-left: 10px; /*Сдвинем правее*/
}

.app_button_block a { /*Сама кнопка (основные свойства для двух сразу)*/
    letter-spacing: 1px; /*Расстояние между буквами*/
    padding: 14px 14px; /*Внутренние отступы для увеличения рамки*/
    border-radius: 5px; /*Скругляем углы*/
    text-decoration: none; /*Убираем подчёркивание*/
    align-items: center; /*Выравниваем внтуренности по горизонтальному центру (друг относительно друга)*/
    display: flex; /*Расположим внутренности по горизонтали*/
}

.app_button_block a h6 { /*Заголовок кнопки (apple store, play store)*/
    margin: 0; /*Обнулим отступы, они появились сами, но не нужны*/
    font-size: 16px; /*Размер текста*/
}

.app_button_block a p { /*Абзац кнопки (download on the)*/
    color: rgba(159, 159, 159, 0.74); /*Цвет текста*/
    font-weight: 600; /*Жирнота текста*/
    font-size: 12px; /*Размер текста*/
    margin: 0 0 2px; /*Отступ снизу, остальные обнуляем*/
}

.apple { /*Кнопка apple store*/
    border: 1px solid #ffffff; /*Задаём рамку*/
    background-color: #ffffff; /*И цвет фона под стать рамке*/
}

.apple h6 { /*Заголовок только внутри кнопки apple*/
    margin-top: 2px; /*Отступ сверху*/
    color: rgba(0, 0, 0, 0.8); /*Цвет текста*/
}

.google { /*Кнопка play store*/
    margin-left: 17px; /*Отступ слева*/
    border: 1px solid #2e2c7c; /*Задаём рамку*/
    background-color: rgba(39, 37, 105, 0.93); /*И цвет фона под стать рамке*/
}

.google h6 { /*Заголовок только внутри кнопки apple*/
    margin-top: 2px; /*Отступ сверху*/
    color: #ffffff; /*Цвет текста*/
}

.get_out_application { /*Абсолютно весь блок от края до края*/
    display: flex; /*Расположим внутренности по горизонтали*/
    align-items: center; /*Выравниваем внтуренности по горизонтальному центру (друг относительно друга)*/
    justify-content: space-between; /*Расставляем элементы по ширине блока*/
}

.app_bg { /*Задний фон блока*/
    margin-top: 120px; /*Отступ сверху*/
    background-color: #E5F0FD;
}

.app_bg .container { /*Для контейнера внутри блока с телефоном*/
    overflow: hidden; /*Таким образом мы скрываем все элементы и детали, что выходят за рамки монитора (а точнее области
    видимости, в которой вы на данный момент находитесь. Фактически убирает возможность вертикального/горизонтального
    скролла для блока/страницы. Будьте аккураты с его использованием, его желательно использовать в тех случаях, когда
    элемент слишком большой и не влезает в допустимые границы, но он портит расстановку элементов*/
}

.app_image { /*Сам телефон*/
    margin-right:-158px; /*Ставим его правее*/
}
/*--------------------------------------------------------------------------------------------------------------------*/
/*Здесь будет дополнение css-файла, чтобы сделать его красивее. Давайте сделаем так, чтобы элементы при наведении
выделялись. Такой эффект более красочный и придаёт контрастности элементам*/

.search_and_login a:hover { /*За изменение элемента при наведении отвечает псевдокласс hover. Когда вы наводите курсор на элемент,
то стиль, описанный ниже, применится к элементу вне зависимости от того, был ли он до этого или нет. Как только вы отведёте курсор,
стиль вернется в прежнее состояние до hover*/
    background-color: #185ec5;
    border: 1px solid #185ec5;
    transition: 300ms; /*Этот параметр отвечает за плавность перехода в другое состояние. Если по нормальному - это
    время перехода из одного состояние в другое. Чем время больше, тем плавнее и дольше будет переход. В основном измеряется
    в миллисекундах (ms) и секундах (s). Лучше всего использовать значения от 200 до 500 миллисекунд, поскольку при
    таких значениях переход достаточно плавный и быстрый. Запомните, в 1 секунде - 1000 миллисекунд, это вам на будущее
    для подбора значений*/
}

/*Дальше просто используем похожую конструкцию для других элементов (например ссылок или кнопок).*/

nav a:hover {
    color: #484848;
    transition: 300ms;
}

.main_text a:hover {
    transition: 300ms;
    background-color: #cfdeff;
    border: 1px solid #cfdeff;
}

.wb_button_block a:first-child:hover {
    background-color: #185ec5;
    border: 1px solid #185ec5;
    transition: 300ms;
}

.wb_button_block a:last-child:hover {
    background-color: #cfdeff;
    border: 1px solid #cfdeff;
    transition: 300ms;
}

.members a:hover {
    color: #1358b9;
    transition: 300ms;
}

.ach_a_elem:hover {
    color: #1358b9;
    transition: 300ms;
}

.ach_card2 .ach_a_elem:hover {
    color: #373741;
    transition: 300ms;
}

.ach_button a:hover {
    background-color: #185ec5;
    border: 1px solid #185ec5;
    transition: 300ms;
}

.big_image a:hover {
    color: #295ec7;
    background-color: #cfdeff;
    border: 1px solid #cfdeff;
    transition: 300ms;
}

.apple:hover {
    border: 1px solid #f5f5f5;
    background-color: #f5f5f5;
    transition: 300ms;
}

.google:hover {
    border: 1px solid #3b389f;
    background-color: #3b389f;
    transition: 300ms;
}

/*Если у вас некорректно отображаются элементы (сдвигаются, слипаются и тд, попробуйте изменить размер контейнера
или отдельных блоков. У меня на устройствах другое разрешение экрана, у вас может быть другое. Учитывайте это при
просмотре.*/
.bg{
    background-color: brown;
}